{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # \uc0\u55357 \u56720 \u65039  HandKeyboard: Thumb-to-Finger Gesture Typing for Meta Quest (Unity)\
\
This project provides a simple hand-tracking keyboard system for Meta Quest using Unity and Meta's XR SDKs. It maps **thumb + finger joint contacts** to virtual keystrokes, which are then displayed in a text console within the scene.\
\
---\
\
## \uc0\u55357 \u56513  Project Structure\
\
Place the following files inside `Assets/Scripts/`:\
\
- `LeftHandComboDetector.cs` \'96 Detects thumb contact on left-hand fingers and maps to letters A\'96L.\
- `RightHandComboDetector.cs` \'96 Detects thumb contact on right-hand fingers and maps to letters M\'96X.\
- `TypingConsoleUI.cs` \'96 A simple script that displays the typed characters on a TextMeshPro UI object.\
\
---\
\
## \uc0\u55357 \u57056 \u65039  Setup Instructions (Unity 2022.3+)\
\
### 1. \uc0\u9989  Prerequisites\
Make sure your project includes:\
- **OpenXR Plugin** (`com.unity.xr.openxr`)\
- **Meta XR SDK** packages (Core, Hands, Interaction, etc.)\
- **XR Hands subsystem**\
- **TextMeshPro** (import TMP Essentials)\
\
---\
\
### 2. \uc0\u55358 \u56809  Scene Setup\
\
#### A. XR Rig and Hand Trackers\
1. Create an **XR Origin (XR Rig)** or **OVRCameraRig** (depending on setup)\
2. Under the XR Rig, add two empty GameObjects:\
   - `LeftHandTracker`\
   - `RightHandTracker`\
3. Attach the `LeftHandComboDetector` and `RightHandComboDetector` scripts to these objects respectively.\
\
#### B. Typing Output (UI Console)\
1. **Right-click in Hierarchy** \uc0\u8594  `UI > Canvas`\
2. Set Canvas `Render Mode` to **World Space**\
3. Inside Canvas:\
   - Add `UI > Text - TextMeshPro`\
   - Rename it to `TypingConsoleText`\
   - Set font size (e.g., 36), color, alignment, and scale\
4. Create an empty GameObject named **`TypingConsoleUI`**\
   - Attach the `TypingConsoleUI.cs` script to it\
   - Drag the `TypingConsoleText` object into the `textBox` field of the script\
\
#### C. Connect Scripts\
1. In the Inspector for both `LeftHandComboDetector` and `RightHandComboDetector`:\
   - Drag the `TypingConsoleUI` GameObject into their `consoleUI` field\
\
---\
\
### 3. \uc0\u9995  Enable Hand Tracking\
\
1. Go to **Edit > Project Settings > XR Plug-in Management > OpenXR > Features**\
2. Enable:\
   - `Hand Tracking Subsystem`\
   - `Meta Hand Tracking Aim`\
   - `Meta XR Feature` (if available)\
\
3. (Optional but recommended) **Add Hand Visualizer:**\
   - Import the `HandVisualizer` sample from **XR Hands**\
   - Attach it to `LeftHandVisualizer` and `RightHandVisualizer` GameObjects\
   - Configure to show hand meshes and joints\
\
---\
\
### 4. \uc0\u9654 \u65039  Test It\
\
- Connect your Meta Quest using **Quest Link**\
- Enter **Play Mode** in Unity\
- Bring your **thumb to other finger joints**\
- You should see `[LEFT] Typed: A`, etc., in the Console and live text in the Typing Console\
\
---\
\
## \uc0\u55357 \u56550  Output Mapping\
\
| Left Thumb Touch | Outputs |\
|------------------|---------|\
| Index joints     | A, B, C |\
| Middle joints    | D, E, F |\
| Ring joints      | G, H, I |\
| Little joints    | J, K, L |\
\
| Right Thumb Touch | Outputs |\
|-------------------|---------|\
| Index joints      | M, N, O |\
| Middle joints     | P, Q, R |\
| Ring joints       | S, T, U |\
| Little joints     | V, W, X |\
\
---\
\
## \uc0\u55358 \u56800  Notes\
- Gesture recognition uses proximity-based `Vector3.Distance` between joints.\
- Inputs are **non-repeating** thanks to an internal flag (`wasTouching`).\
- You can easily modify `keyMappings` in either detector script to customize output.\
\
---\
\
## \uc0\u55358 \u56810  Want to Extend It?\
- Add backspace/space/enter gestures\
- Stream input via WebSocket or UDP\
- Add typing sound effects or predictive text\
\
---\
\
## \uc0\u10024  Credits\
Built using Meta XR SDKs, OpenXR, and Unity's XR Hands subsystem.}